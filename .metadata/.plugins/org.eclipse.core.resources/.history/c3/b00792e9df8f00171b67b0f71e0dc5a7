import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;

public class PackageProblem {
	public static void main(String[] args) throws Exception {
		PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
		
		FileInputStream fstream = new FileInputStream("textfile.txt");
		BufferedReader br = new BufferedReader(new InputStreamReader(fstream));

		String strLine;
		while ((strLine = br.readLine()) != null)   {
			

			System.out.println (strLine);
		}
		br.close();
	}

	//global variables
	public static int maxPackageCount=0;
	public static String selectedPackages="";
	
	//recursive function
	public static void findPackages(ArrayList<Package> packages, int currentIndex, float packageMaxWeight,
			float selectedPackageWeight, int selectedPackageCost, String selectedPackageIndexs) {
		if (selectedPackageWeight > packageMaxWeight) {
			return;
		}
		if (currentIndex == packages.size()) {
			if(maxPackageCount<selectedPackageCost){
				maxPackageCount=selectedPackageCost;
				selectedPackages=selectedPackageIndexs;
			}
			return;
		}
		Package currentPackage = packages.get(currentIndex);
		findPackages(packages, currentIndex + 1, packageMaxWeight, selectedPackageWeight, selectedPackageCost,
				selectedPackageIndexs);
		
		findPackages(packages, currentIndex + 1, packageMaxWeight, selectedPackageWeight + currentPackage.weight,
				selectedPackageCost + currentPackage.cost, selectedPackageIndexs + " " + currentPackage.index);
	}
}

class Package {
	int index;
	float weight;
	int cost;

	public Package(int index, float weight, int cost) {
		this.index = index;
		this.weight = weight;
		this.cost = cost;
	}

	@Override
	public String toString() {
		System.out.println(this.index + " " + this.weight + " " + this.cost);
		return super.toString();
	}
}